% Number of robots
N = 35;
% Workspace
numRows = 30;
numCols = 30;
parameters = [...
 10,4,25,9,0.506745;
 21,7,16,11,0.901822;
 22,22,15,19,0.855937;
 28,20,3,5,0.915281;
 24,10,26,21,0.703345;
 25,15,10,21,0.997299;
 14,0,20,24,0.721793;
 0,0,0,5,0.736885;
 21,26,21,22,0.853053;
 0,7,16,14,0.588305;
 0,26,20,11,0.676992;
 16,21,4,2,0.640553;
 0,13,1,15,0.971892;
 0,29,25,0,0.829173;
 25,0,23,16,0.901502;
 11,4,2,7,0.908002;
 26,7,0,11,0.500092;
 26,28,0,28,0.792993;
 10,25,7,16,0.74456;
 7,13,2,2,0.535539;
 17,29,12,15,0.566073;
 20,4,6,24,0.992264;
 6,7,10,15,0.725623;
 28,28,9,27,0.544298;
 16,1,27,27,0.618564;
 25,1,18,27,0.7949;
 7,4,24,14,0.848521;
 16,18,24,21,0.849757;
 2,0,29,0,0.880032;
 1,9,9,25,0.876537;
 29,21,17,27,0.807352;
 5,6,7,29,0.956725;
 5,20,13,27,0.824503;
 27,1,1,3,0.599414;
 27,25,28,28,0.912122;];

% Paths
Paths = cell(35,1);
Paths{1} = [357 358 390 422 454 455 456 457 458 458 490 490 522 554 586 618 619 651 683 715 747 779 811 810 842];
Paths{2} = [712 713 681 682 683 651 619 587 588 556];
Paths{3} = [759 727 726 725 693 661 629 597 565 533 532];
Paths{4} = [949 948 947 946 945 944 943 942 941 940 939 938 906 905 904 903 871 839 807 775 774 742 710 678 646 614 582 550 518 486 454 422 390 358 359 327 295 294 262 230 198 166 134];
Paths{5} = [811 843 875 876 877 878 879 880 912 913 914 915 916 917 918 886];
Paths{6} = [848 816 817 785 753 721 689 657 625 593 594 595 563 531 499 467 435 436 404 405 373 374];
Paths{7} = [481 482 514 515 516 517 518 519 520 521 522 523 524 525 557 558 559 560 561 593 594 595 627 628 629 630 631 632 664 696 697];
Paths{8} = [33 34 35 36 37 38];
Paths{9} = [731 730 729 728 727];
Paths{10} = [40 41 73 105 137 169 170 202 234 266 298 330 362 394 395 427 428 429 461 493 525 526 558 559];
Paths{11} = [59 58 90 122 154 186 218 250 249 281 313 345 377 376 408 407 406 438 470 469 468 467 466 465 464 463 462 461 493 525 557 589 621 653 652 684];
Paths{12} = [566 534 502 501 469 468 467 435 403 402 401 400 399 398 397 396 364 363 362 330 329 297 296 295 294 293 292 291 259 227 195 163];
Paths{13} = [46 47 79 80];
Paths{14} = [62 94 93 92 91 90 89 121 153 152 151 183 215 247 279 278 310 342 374 406 438 470 469 501 533 565 564 563 562 561 593 625 624 623 622 654 686 718 750 749 748 747 746 745 744 743 742 741 773 772 771 770 802 834 833];
Paths{15} = [833 865 865 866 867 868 869 870 871 872 873 874 875 843 844 845 846 847 848 849 817 785];
Paths{16} = [389 389 357 325 293 294 262 230 198 166 134 102 70 71 72 104];
Paths{17} = [872 871 839 807 808 776 777 745 713 681 649 617 585 553 521 489 457 425 393 394 362 330 298 266 234 202 203 171 139 140 108 76 44];
Paths{18} = [893 861 860 859 827 795 763 731 699 667 635 603 603 602 570 569 537 505 473 441 409 410 378 346 314 282 250 218 186 187 155 123 124 125 93 61];
Paths{19} = [378 377 345 313 312 311 310 309 308 307 306 305 305 305 273];
Paths{20} = [270 238 237 236 204 203 171 139 138 137 136 104 103 102 101 69 68 67 99];
Paths{21} = [606 605 604 603 602 601 600 599 598 597 565 533 501 500 468 468 468 467 466 465 464 432];
Paths{22} = [677 678 679 647 615 583 584 585 586 587 588 589 590 591 559 560 561 562 563 564 565 566 567 568 569 537 505 473 441 409 377 345 313 281 249];
Paths{23} = [232 233 265 297 329 330 362 363 364 365 366 367 368];
Paths{24} = [957 956 924 923 891 859 827 795 763 731 699 667 635 635 603 571 539 540 541 509 477 445 413 412 380 348];
Paths{25} = [546 547 548 580 581 582 614 646 678 710 711 743 744 745 746 747 779 811 843 875 876 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924];
Paths{26} = [834 835 836 837 838 870 871 872 873 874 875 876 877 878 879 880 881 882 850 851 852 820 821 789 790 791 792 760 761 762 763 764 732 700 668 636];
Paths{27} = [261 262 294 295 327 359 391 423 455 456 488 489 489 490 490 522 554 586 618 619 651 683 715 747 779 811 812 813 814 814 814 815];
Paths{28} = [563 564 596 628 660 692 724 756 788 820 821 822];
Paths{29} = [97 129 161 193 225 257 289 321 353 385 417 449 481 513 545 546 578 610 609 641 673 705 737 738 770 802 834 866 898 930 962 961];
Paths{30} = [74 75 76 44 45 46 47 79 111 112 113 114 115 116 148 180 181 182 183 184 216 248 280 312 313 345 346];
Paths{31} = [982 950 918 886 854 855 856 857 858 859 860 828 796 764 732 700 668 636 604];
Paths{32} = [199 200 232 233 234 266 267 268 269 270 271 272 273 274 275 307 308 309 310 311 312 313 314 315 316 317 285 286];
Paths{33} = [213 214 246 278 310 342 374 406 407 408 440 472 473 474 475 476];
Paths{34} = [898 866 867 835 803 771 739 707 708 676 644 612 580 548 516 484 452 420 421 389 357 325 293 261 229 197 165 133 101 69 68];
Paths{35} = [922 923 955 955 956 957];

for n = 1:35
	y =  floor(Paths{n}/32) - 1;
	x = mod(Paths{n},32) -1;
	Paths{n} = y + x*30 +1;
    p = 2;
%     while p <= length(Paths{n})
%         if Paths{n}(p) == Paths{n}(p-1)
%             Paths{n}(p) = [];
%         else
%             p = p + 1;
%         end
%     end
end

% Init/Final Conditions, Delay Prob
initial_locations = zeros(1,N);
final_locations = zeros(1,N);
for i = 1:N
   initial_locations(i) = Paths{i}(1);
   final_locations(i) = Paths{i}(end);
end
% Obstacles
obstacles = find([;
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,;
0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,;
0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,;
0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,;
0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,1,;
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,;
0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,;
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,;
0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,;
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1,;
0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,;
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,;
0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,;
0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,;
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,;
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,;
1,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,;
0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,;
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,;
0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,;
1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,;
]);
ws = create_workspace(numRows, numCols, obstacles);