% Number of robots
N = 35;
% Workspace
numRows = 30;
numCols = 30;
parameters = [...
 8,18,25,8,0.506745;
 29,14,8,8,0.901822;
 18,11,7,11,0.855937;
 9,29,7,29,0.915281;
 8,13,27,7,0.703345;
 10,9,20,12,0.997299;
 16,26,2,23,0.721793;
 18,14,2,18,0.736885;
 18,20,2,21,0.853053;
 3,12,25,24,0.588305;
 24,26,20,22,0.676992;
 20,16,3,0,0.640553;
 8,6,5,23,0.971892;
 20,1,25,28,0.829173;
 16,22,29,7,0.901502;
 8,9,24,27,0.908002;
 2,13,11,12,0.500092;
 25,8,12,4,0.792993;
 25,10,6,28,0.74456;
 23,14,1,0,0.535539;
 12,20,24,18,0.566073;
 16,14,16,5,0.992264;
 29,11,18,3,0.725623;
 18,3,26,0,0.544298;
 10,7,7,26,0.618564;
 13,17,27,12,0.7949;
 29,27,24,5,0.848521;
 23,19,23,6,0.849757;
 15,3,27,20,0.880032;
 11,3,20,3,0.876537;
 14,3,17,2,0.807352;
 16,1,19,5,0.956725;
 18,26,12,1,0.824503;
 20,9,15,18,0.599414;
 16,25,29,10,0.912122;];

% Paths
Paths = cell(35,1);
Paths{1} = [307 306 305 304 303 302 301 333 365 397 396 395 427 459 491 523 522 554 586 618 617 649 681 713 745 777 809 841];
Paths{2} = [975 943 911 879 847 815 815 815 814 782 750 749 717 716 684 652 620 588 556 524 492 493 461 429 428 396 364 363 362 330 329 297];
Paths{3} = [620 588 587 555 523 491 459 427 395 363 331 299 267 268];
Paths{4} = [350 318 286];
Paths{5} = [302 301 333 365 397 429 428 460 459 491 523 555 587 619 618 617 649 681 713 745 744 776 808 840 872 904];
Paths{6} = [362 363 395 396 428 460 492 524 556 588 620 652 653 653 685];
Paths{7} = [571 539 507 475 443 411 379 347 346 314 282 250 218 186 154 153 121 120];
Paths{8} = [623 591 559 527 495 463 431 431 430 398 366 334 335 303 304 272 273 274 242 210 178 146 114 115];
Paths{9} = [629 597 598 566 567 535 503 471 439 407 375 343 311 279 278 246 214 182 150 118];
Paths{10} = [141 141 141 141 141 142 143 144 176 208 209 241 273 305 337 369 401 433 465 466 498 530 562 594 626 658 690 722 754 786 787 788 820 852 853 854 855 856 857];
Paths{11} = [827 795 794 793 761 760 759 727 695];
Paths{12} = [689 688 687 686 685 684 683 651 650 618 586 554 553 521 489 488 456 455 423 422 390 358 357 325 293 292 260 259 259 259 259 259 259 259 259 259 259 258 257 225 193 161 129];
Paths{13} = [295 263 231 232 200 201 202 203 204 205 206 207 208 209 210 211 212 213 245 246 247 215 216];
Paths{14} = [674 675 707 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 797 829 861];
Paths{15} = [567 566 565 564 563 562 594 626 625 624 623 622 654 686 718 717 716 715 747 779 811 810 809 841 873 905 937 936 968];
Paths{16} = [298 330 362 363 363 363 363 364 396 428 460 492 524 556 588 589 590 622 623 624 656 657 658 659 691 723 755 756 757 758 759 760 761 793 794 795 796 828];
Paths{17} = [110 142 143 175 207 239 271 270 269 301 333 365 397];
Paths{18} = [841 809 777 745 713 681 649 617 616 615 583 583 551 519 518 486 454 453 421];
Paths{19} = [843 811 812 813 814 782 750 751 752 753 721 689 657 658 659 660 661 662 663 664 665 666 667 635 603 571 539 507 475 443 411 379 347 348 316 284 252 253];
Paths{20} = [783 782 781 780 779 747 746 745 713 681 680 679 678 677 645 613 612 580 548 516 484 483 451 419 387 355 323 322 290 258 226 194 162 130 98 66 65];
Paths{21} = [437 469 468 500 532 531 563 595 627 659 691 723 755 787 819];
Paths{22} = [559 527 526 525 524 556 555 554 553 552 551 550];
Paths{23} = [972 940 908 907 875 843 811 810 809 808 807 806 805 804 772 740 708 676 644 612];
Paths{24} = [612 644 643 675 707 739 738 770 802 834 866 865];
Paths{25} = [360 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 379 347 315 283];
Paths{26} = [466 498 530 562 594 626 625 624 656 688 687 719 751 783 782 814 846 878 910 909];
Paths{27} = [988 987 986 985 984 952 951 950 949 948 947 946 945 944 943 942 941 940 939 938 937 936 935 934 902 870 838 806];
Paths{28} = [788 787 786 785 784 783 783 782 781 780 779 811 810 809 808 807 775];
Paths{29} = [516 517 518 519 551 583 615 647 648 649 650 651 683 715 747 779 780 781 782 783 784 785 786 787 788 820 852 884 916 917];
Paths{30} = [388 420 452 452 484 516 548 580 612 644 644 644 644 644 644 676 675 675 675 675 675 676];
Paths{31} = [484 484 516 548 547 579];
Paths{32} = [546 547 579 580 612 644 645 646];
Paths{33} = [635 603 603 602 601 569 537 536 535 534 502 501 500 468 467 466 465 464 463 462 461 460 428 427 395 394 393 393 425 424 423 422 454 453 452 451 450 418];
Paths{34} = [682 650 651 652 653 654 622 623 591 592 593 594 595 563 531];
Paths{35} = [570 602 634 666 698 730 762 794 826 858 890 889 888 920 952 951 950 949 948 947 946 945 944 943 942 941 940 939 971];

for n = 1:35
	y =  floor(Paths{n}/32) - 1;
	x = mod(Paths{n},32) -1;
	Paths{n} = y + x*30 +1;
    p = 2;
%     while p <= length(Paths{n})
%         if Paths{n}(p) == Paths{n}(p-1)
%             Paths{n}(p) = [];
%         else
%             p = p + 1;
%         end
%     end
end

% Init/Final Conditions, Delay Prob
initial_locations = zeros(1,N);
final_locations = zeros(1,N);
for i = 1:N
   initial_locations(i) = Paths{i}(1);
   final_locations(i) = Paths{i}(end);
end
% Obstacles
obstacles = find([;
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,;
0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,;
0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,;
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,;
0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,;
0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,1,;
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,;
1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,;
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,;
0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,;
0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,;
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,;
0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,;
1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,;
0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,;
0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,;
0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,;
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,;
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,;
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,;
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,;
0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,;
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,;
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,;
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,;
]);
ws = create_workspace(numRows, numCols, obstacles);